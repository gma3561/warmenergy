function doPost(e) {
  try {
    // 현재 스프레드시트 가져오기
    const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();

    // 첫 번째 행이 비어있으면 헤더 추가
    if (sheet.getLastRow() === 0) {
      sheet.appendRow([
        '접수시간',
        '회사명',
        '담당자명',
        '직급',
        '연락처',
        '이메일',
        '사업장 주소',
        '월 평균 전기요금',
        '문의사항'
      ]);
    }

    // POST 데이터 파싱
    const data = JSON.parse(e.postData.contents);

    // 현재 시간 (한국 시간)
    const now = new Date();
    const kstTime = Utilities.formatDate(now, 'Asia/Seoul', 'yyyy-MM-dd HH:mm:ss');

    // 스프레드시트에 데이터 추가
    sheet.appendRow([
      kstTime,
      data.company,
      data.name,
      data.position || '',
      data.phone,
      data.email || '',
      data.location,
      data.electricBill || '',
      data.message || ''
    ]);

    // 이메일 전송
    const emailSubject = `[전기요금 절감 컨설팅] ${data.company} - ${data.name}님 문의`;

    const emailBody = `
새로운 전기요금 절감 컨설팅 문의가 접수되었습니다.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📋 회사 정보
━━━━━━━━━━━━━━━━━━━━━━━━━━━━
회사명: ${data.company}
담당자명: ${data.name}
직급: ${data.position || '미입력'}
연락처: ${data.phone}
이메일: ${data.email || '미입력'}
사업장 주소: ${data.location}
월 평균 전기요금: ${data.electricBill || '미입력'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💬 문의사항
━━━━━━━━━━━━━━━━━━━━━━━━━━━━
${data.message || '문의사항 없음'}

━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 데이터 확인
━━━━━━━━━━━━━━━━━━━━━━━━━━━━
접수 시간: ${kstTime}
스프레드시트: ${SpreadsheetApp.getActiveSpreadsheet().getUrl()}
━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    `.trim();

    // 이메일 전송
    GmailApp.sendEmail(
      'lucas@warmguys.com',  // 받는 사람
      emailSubject,          // 제목
      emailBody,             // 본문
      {
        name: '전기요금 절감 컨설팅 시스템',
        replyTo: data.email || 'noreply@warmenergy.com'
      }
    );

    // 성공 응답
    return ContentService
      .createTextOutput(JSON.stringify({
        'status': 'success',
        'message': '문의가 성공적으로 접수되었습니다.'
      }))
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    // 에러 응답
    return ContentService
      .createTextOutput(JSON.stringify({
        'status': 'error',
        'message': '처리 중 오류가 발생했습니다.',
        'error': error.toString()
      }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}

// GET 요청 처리 (테스트용)
function doGet(e) {
  const sheet = SpreadsheetApp.getActiveSpreadsheet();
  const data = sheet.getActiveSheet().getDataRange().getValues();

  return ContentService
    .createTextOutput(JSON.stringify({
      'status': 'ready',
      'message': 'API가 정상 작동 중입니다.',
      'total_submissions': Math.max(0, data.length - 1),
      'sheet_url': sheet.getUrl()
    }))
    .setMimeType(ContentService.MimeType.JSON);
}